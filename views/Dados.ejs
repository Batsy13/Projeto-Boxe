<!DOCTYPE ejs>
<html lang="pt_BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Buscar Dados</title>
    <link rel="stylesheet" href="CSS/dados.css">
    <link rel="shortcut icon" type="imagex/png" href="./IMG/france-logo-init.png">
</head>

<body>
    <section class="main-bg page">

        <div class="conteiner">

            <div class="header">
                <div class="nav-links">
                    <a href="./Agendar" style="margin-right:30px;"> Agendar Partida </a>
                    <a href="./Partida"> Efetivar Partida</a>
                </div>
                <a href="./menu"><img src="./IMG/logo-olim-juiz.png" alt="Ícone das Olimpíadas" class="logo"></a>
                <div class="nav-links">
                    <a href="./Atleta" style="margin-right:30px;">Cadastrar Atleta</a>
                    <a href="./DadosPartidas">Buscar Partidas</a>
                </div>
                <div class="hamburger" onclick="toggleMenu()">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
                <div class="mobile-menu">
                    <a href="./Agendar"> Agendar Partida </a>
                    <a href="./Atleta">Adicionar Atleta</a>
                    <a href="./Dados">Buscar Dados</a>
                    <a href="./DadosPartidas">Buscar Partidas</a>
                </div>
            </div>
            <input type="text" id="search" placeholder="Pesquisar" maxlength="64">
            <ul id="lista">

            </ul>
        </div>

    </section>


    <script>
        const externalApiUrl = 'https://olimpiadasiesb-7780607c931d.herokuapp.com/';

        fetch('/api/atletas')
            .then(res => res.json())
            .then(atletas => {
                const ul = document.getElementById('lista');
                atletas.forEach(atleta => {
                    const li = document.createElement('li');
                    li.innerHTML = atleta.athlete + ' <div> <svg id="edit-' + atleta._id + '" width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M30 0L25 5L35 15L40 10L30 0ZM20 10L0 30V40H10L30 20L20 10Z" fill="#F2F2F3"/></svg> <svg id="delete-' + atleta._id + '" width="36" height="41" viewBox="0 0 36 41" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M15.375 0C12.5562 0 10.25 2.30625 10.25 5.125H5.125C2.30625 5.125 0 7.43125 0 10.25H35.875C35.875 7.43125 33.5688 5.125 30.75 5.125H25.625C25.625 2.30625 23.3188 0 20.5 0H15.375ZM5.125 15.375V40.0262C5.125 40.59 5.535 41 6.09875 41H29.8275C30.3913 41 30.8013 40.59 30.8013 40.0262V15.375H25.6763V33.3125C25.6763 34.7475 24.5488 35.875 23.1138 35.875C21.6788 35.875 20.5513 34.7475 20.5513 33.3125V15.375H15.4262V33.3125C15.4262 34.7475 14.2987 35.875 12.8637 35.875C11.4287 35.875 10.3012 34.7475 10.3012 33.3125V15.375H5.17625H5.125Z" fill="#F2F2F3"/></svg> </div>'
                    ul.appendChild(li);

                    // Adiciona evento de clique ao elemento SVG de edição
                    document.getElementById('edit-' + atleta._id).addEventListener('click', function () { editarAtleta(atleta._id); });

                    // Adiciona evento de clique ao elemento SVG de exclusão
                    document.getElementById('delete-' + atleta._id).addEventListener('click', function () {
                        excluirAtleta(atleta._id, li);
                    });
                });
            });

        function editarAtleta(id) {
            // Cria o elemento de popup
            const popup = document.createElement('div');
            popup.className = 'conteiner';
            popup.style.position = 'fixed';
            popup.style.top = '50%';
            popup.style.left = '50%';
            popup.style.transform = 'translate(-50%, -50%)';
            popup.style.padding = '20px';
            popup.style.zIndex = '1000';

            // Cria o formulário dentro do popup
            const form = document.createElement('form');
            form.className = 'form';
            form.addEventListener('submit', function (event) {
                event.preventDefault();
                const novosDadosDoAtleta = {
                    country: form.country.value,
                    weight: form.weight_category.value,
                    athlete: form.athlete.value,
                    age: form.age.value
                };
                atualizarAtleta(id, novosDadosDoAtleta);
                document.body.removeChild(popup);
            });

            const props = ['country', 'weight', 'athlete', 'age'];
            const placeholders = ['país', 'peso', 'atleta', 'idade'];

            props.forEach(function (prop, index) {
                const input = document.createElement('input');
                input.className = 'inputs';
                input.type = 'text';
                input.name = prop;
                if (index == 3) {
                    input.placeholder = "Nova " + placeholders[index];
                }
                else {
                    input.placeholder = "Novo " + placeholders[index];
                }

                form.appendChild(input);
            });

            const buttonContainer = document.createElement('div');
            buttonContainer.className = 'button-container';

            const cancel = document.createElement('button');
            cancel.className = 'cancel';
            cancel.type = 'button';
            cancel.textContent = 'Cancelar';
            cancel.addEventListener('click', function () {
                document.body.removeChild(popup);
            });
            buttonContainer.appendChild(cancel);

            const submit = document.createElement('input');
            submit.className = 'submit';
            submit.type = 'submit';
            submit.value = 'Atualizar Atleta';
            buttonContainer.appendChild(submit);

            form.appendChild(buttonContainer);

            popup.appendChild(form);

            document.body.appendChild(popup);
        }

        function atualizarAtleta(id, novosDadosDoAtleta) {
            // Atualiza na API interna
            fetch('/api/atletas/' + id, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(novosDadosDoAtleta),
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Sucesso na atualização interna:', data);
                })
                .catch((error) => {
                    console.error('Erro na atualização interna:', error);
                });

            // Atualiza na API externa
            fetch(externalApiUrl + 'atletas?_id=' + id, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(novosDadosDoAtleta),
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Sucesso na atualização externa:', data);
                })
                .catch((error) => {
                    console.error('Erro na atualização externa:', error);
                });
        }

        function excluirAtleta(id, li) {
            // Remove da API interna
            fetch('/api/atletas/' + id, {
                method: 'DELETE',
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Sucesso na exclusão interna:', data);
                    // Remove o elemento li do DOM
                    li.parentNode.removeChild(li);
                })
                .catch((error) => {
                    console.error('Erro na exclusão interna:', error);
                });

            // Remove da API externa
            fetch(externalApiUrl + 'atletas?_id=' + id, {
                method: 'DELETE',
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Sucesso na exclusão externa:', data);
                })
                .catch((error) => {
                    console.error('Erro na exclusão externa:', error);
                });
        }

        function filtrarAtletas() {
            const input = document.getElementById('search');
            const filter = input.value.toUpperCase();
            const ul = document.getElementById('lista');
            const li = ul.getElementsByTagName('li');

            for (let i = 0; i < li.length; i++) {
                let txtValue = li[i].textContent || li[i].innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    li[i].style.display = "";
                } else {
                    li[i].style.display = "none";
                }
            }
        }

        document.getElementById('search').addEventListener('input', filtrarAtletas);

        function toggleMenu() {
            const mobileMenu = document.querySelector('.mobile-menu');
            mobileMenu.classList.toggle('show');
        }

        window.addEventListener('click', function (event) {
            const mobileMenu = document.querySelector('.mobile-menu');
            const hamburger = document.querySelector('.hamburger');

            if (!mobileMenu.contains(event.target) && !hamburger.contains(event.target)) {
                mobileMenu.classList.remove('show');
            }
        });

    </script>

</body>

</html>
